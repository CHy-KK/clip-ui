// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: sprite-vs:vert
      frag: sprite-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
  #if USE_LOCAL
    #include <builtin/uniforms/cc-local>
  #endif
  #if SAMPLE_FROM_RT
    #include <common/common-define>
  #endif
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 color;
  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);

    #if USE_LOCAL
      pos = cc_matWorld * pos;
    #endif

    #if USE_PIXEL_ALIGNMENT
      pos = cc_matView * pos;
      pos.xyz = floor(pos.xyz);
      pos = cc_matProj * pos;
    #else
      pos = cc_matViewProj * pos;
    #endif

    uv0 = a_texCoord;
    #if SAMPLE_FROM_RT
      CC_HANDLE_RT_SAMPLE_FLIP(uv0);
    #endif
    color = a_color;

    return pos;
  }
}%

CCProgram sprite-fs %{
   precision highp float;
  #include <builtin/internal/embedded-alpha>
  #include <builtin/internal/alpha-test>

  in vec4 color;

  in vec2 uv0;

  vec3 lerp(vec3 left, vec3 right, float ratio) {
    return left * (1.0 - ratio) + right * ratio;
  }

  vec4 frag () {
    vec3 o = vec3(1, 0, 0);
    float uvy = 1.0 - uv0.y * 4.0;
    if (uvy >= 0.0 && uvy < 0.17) {
        o = lerp(vec3(1, 0, 0), vec3(1, 0, 1), uvy / 0.17);
    } else if (uvy < 0.34) {
        o = lerp(vec3(1, 0, 1), vec3(0, 0, 1), (uvy - 0.17) / 0.17);
    } else if (uvy < 0.51) {
        o = lerp(vec3(0, 0, 1), vec3(0, 1, 1), (uvy - 0.34) / 0.17);
    } else if (uvy < 0.68){
        o = lerp(vec3(0, 1, 1), vec3(0, 1, 0), (uvy - 0.51) / 0.17);
    } else if (uvy < 0.85){
        o = lerp(vec3(0, 1, 0), vec3(1, 1, 0), (uvy - 0.68) / 0.17);
    } else {
        o = lerp(vec3(1, 1, 0), vec3(1, 0, 0), (uvy - 0.85) / 0.15);
    }
    // return vec4(uvy, uvy, uvy, 1);
    return vec4(o.xyz, 1);
  }
}%
